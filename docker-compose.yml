version: '3.7'
services:

    #postgre
    postgres:
        image: postgres:12
        container_name: ${POSTGRES_CONTAINER_NAME}
        environment:
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          - POSTGRES_DB=${POSTGRES_DB}
        logging:  
          options:
            max-size: 10m
            max-file: "3"
        ports:
          - '${POSTGRES_PORT}:${POSTGRES_PORT}'
        volumes: 
          - postgres-data:/var/lib/postgresql/data
        networks:
          - backend


    #redis
    redis:
      image: redis:6.2-alpine
      container_name : ${REDIS_CONTAINER_NAME}
      networks:
        - backend
      ports:
          - '${REDIS_PORT}:${REDIS_PORT}'
      command: redis-server --requirepass ${REDIS_PASSWORD}
      volumes:
        - redis-data:/data

    # app
    app:
      container_name: ${APP_NAME}
      build: .
      ports: 
        - ${PORT}:${PORT} 
      volumes:
        - app:/usr/src/app
      networks:
        - backend
      depends_on:
        - redis
        - postgres

    # prometheus
    prometheus:
      container_name: prometheus-${APP_NAME}
      image: prom/prometheus:latest
      volumes:
        - ./prometheus:/etc/prometheus/
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
      ports:
        - 9090:9090
      depends_on:
        - app


  #grafana
    grafana:
      container_name: grafana-${APP_NAME}
      image: grafana/grafana:latest
      ports:
        - 3000:3000
      depends_on:
        - prometheus


volumes: 
      postgres-data:
      redis-data:
      app:


networks: 
  backend:
    driver: bridge
